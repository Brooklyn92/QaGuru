plugins {
    id 'java'
    id 'io.qameta.allure' version '2.8.1'
}

repositories {
    mavenCentral()
}

compileTestJava {
    options.encoding("UTF-8")
}

def allureVersion = "2.16.0",
    selenideVersion = "5.24.0",
    junitVersion = "5.8.1"

allure {
    version = allureVersion
    //autoconfigure = true
    //aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:1.9.5",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.github.javafaker:javafaker:1.0.2",
            'commons-io:commons-io:2.11.0',
            'com.codeborne:pdf-test:1.7.0',
            'com.codeborne:xls-test:1.2',
            'com.opencsv:opencsv:5.5.2',
            'org.apache.poi:poi:4.1.2',
            'com.opencsv:opencsv:5.5.2',
            'org.junit.jupiter:junit-jupiter:5.8.1',
            'commons-io:commons-io:2.5',
            "com.codeborne:selenide:$selenideVersion"
    )
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:1.7.29",
            'org.junit.jupiter:junit-jupiter-engine:5.8.1')

}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {
    useJUnitPlatform()
}
